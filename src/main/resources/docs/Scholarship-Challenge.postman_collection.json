{
	"info": {
		"_postman_id": "4aaa037d-d848-422b-b4c2-2ec0b389d887",
		"name": "Scholarship-Challenge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17207272"
	},
	"item": [
		{
			"name": "Class",
			"item": [
				{
					"name": "Create a new Class",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"studentList\": [],\r\n  \"coordinatorAssigned\": null,\r\n  \"instructorsAssigned\": [],\r\n  \"scrumMasterAssigned\": null,\r\n  \"squadList\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/classes/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"classes",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all class members (staff + students + squads)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/classes/get/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"classes",
								"get",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start a class",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/classes/1/start",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"classes",
								"1",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Finish a class",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/classes/1/finish",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"classes",
								"1",
								"finish"
							]
						}
					},
					"response": []
				},
				{
					"name": "Populate Class with Students",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/classes/1/populateStudents",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"classes",
								"1",
								"populateStudents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Populate Class with staff",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/classes/1/populateStaff",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"classes",
								"1",
								"populateStaff"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create and populate squads",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/classes/1/addSquads",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"classes",
								"1",
								"addSquads"
							]
						}
					},
					"response": []
				}
			],
			"description": "### **Class Management Endpoints**\n\n#### Get All Classes\n\n- **Method:** GET\n    \n- **Endpoint:** `/v1/classes`\n    \n- **Description:** Retrieve a list of all classes.\n    \n\n#### Get Class Members\n\n- **Method:** GET\n    \n- **Endpoint:** `/v1/classes/{classId}`\n    \n- **Description:** Retrieve details about a specific class, including its members (students, coordinators, instructors, and squads).\n    \n\n#### Create Class\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/classes/create`\n    \n- **Description:** Create a new class.\n    \n\n#### Start Class\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/classes/{classId}/start`\n    \n- **Description:** Start a specific class.\n    \n\n#### Finish Class\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/classes/{classId}/finish`\n    \n- **Description:** Finish a specific class.\n    \n\n#### Add Student to Class\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/classes/{classId}/students/{studentId}`\n    \n- **Description:** Add a student to a specific class.\n    \n\n#### Delete Student from Class\n\n- **Method:** DELETE\n    \n- **Endpoint:** `/v1/classes/{classId}/students/{studentId}`\n    \n- **Description:** Delete a student from a specific class.\n    \n\n#### Add Squad to Class\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/classes/{classId}/squads`\n    \n- **Description:** Add a squad to a specific class.\n    \n\n#### Delete Squad from Class\n\n- **Method:** DELETE\n    \n- **Endpoint:** `/v1/classes/{classId}/squads/{squadId}`\n    \n- **Description:** Delete a squad from a specific class.\n    \n\n#### Add Coordinator to Class\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/classes/{classId}/coordinators/{coordinatorId}`\n    \n- **Description:** Add a coordinator to a specific class.\n    \n\n#### Delete Coordinator from Class\n\n- **Method:** DELETE\n    \n- **Endpoint:** `/v1/classes/{classId}/coordinators/{coordinatorId}`\n    \n- **Description:** Delete the coordinator from a specific class.\n    \n\n#### Add Instructors to Class\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/classes/{classId}/addInstructors`\n    \n- **Description:** Add instructors to a specific class.\n    \n\n#### Delete Instructor from Class\n\n- **Method:** DELETE\n    \n- **Endpoint:** `/v1/classes/{classId}/instructors/{instructorId}`\n    \n- **Description:** Delete an instructor from a specific class.\n    \n\n#### Add Scrum Master to Class\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/classes/{classId}/addScrumMaster/{scrumMasterId}`\n    \n- **Description:** Add a Scrum Master to a specific class.\n    \n\n#### Delete Scrum Master from Class\n\n- **Method:** DELETE\n    \n- **Endpoint:** `/v1/classes/{classId}/scrumMaster`\n    \n- **Description:** Remove the Scrum Master from a specific class.\n    \n\n#### Populate Staff\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/classes/{classId}/populateStaff`\n    \n- **Description:** Populate staff members (coordinator, instructors, and Scrum Master) for a specific class.\n    \n\n#### Populate Students\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/classes/{classId}/populateStudents`\n    \n- **Description:** Populate students for a specific class, ensuring they are not duplicated.\n    \n\n#### Add Squads to Class with Students\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/classes/{classId}/addSquads`\n    \n- **Description:** Add squads to a class with its existing students, ensuring students are not duplicated in multiple squads."
		},
		{
			"name": "Student",
			"item": [
				{
					"name": "Get all students",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/students",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"students"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get student by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/students/get/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"students",
								"get",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create student",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Damian\",\r\n    \"lastName\": \"Lillard\",\r\n    \"email\": \"damian.lillard@example.com\",\r\n    \"classAssigned\": null\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/v1/students/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"students",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update student",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Damian\",\r\n    \"lastName\": \"Lillard\",\r\n    \"email\": \"damian.lillard@example.com\",\r\n    \"classAssigned\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/students/update/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"students",
								"update",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete student by Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/students/delete/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"students",
								"delete",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"description": "### Student Management Endpoints\n\n#### Get All Students\n\n- **Method:** GET\n    \n- **Endpoint:** `/v1/students`\n    \n- **Description:** Retrieve a list of all students.\n    \n\n#### Get Student by ID\n\n- **Method:** GET\n    \n- **Endpoint:** `/v1/students/get/{studentId}`\n    \n- **Description:** Retrieve details about a specific student by their ID.\n    \n\n#### Create Student\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/students/create`\n    \n- **Description:** Create a new student.\n    \n\n#### Update Student\n\n- **Method:** PUT\n    \n- **Endpoint:** `/v1/students/update/{studentId}`\n    \n- **Description:** Update details of a specific student by their ID.\n    \n\n#### Delete Student\n\n- **Method:** DELETE\n    \n- **Endpoint:** `/v1/students/delete/{studentId}`\n    \n- **Description:** Delete a specific student by their ID."
		},
		{
			"name": "Squad",
			"item": [
				{
					"name": "Get squad by Id",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Create a squad",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"studentList\": [],\r\n  \"classAssigned\": null,\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/squads/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"squads",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a squad by Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/squads/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"squads",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"description": "### Squad Management Endpoints\n\n#### Find Squad by ID\n\n- **Method:** GET\n    \n- **Endpoint:** `/v1/squads/{squadId}`\n    \n- **Description:** Retrieve details about a specific squad by its ID.\n    \n\n#### Create Squad\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/squads/create`\n    \n- **Description:** Create a new squad.\n    \n\n#### Add Student to Squad\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/squads/{squadId}/students`\n    \n- **Description:** Add a student to a specific squad.\n    \n\n#### Delete Squad\n\n- **Method:** DELETE\n    \n- **Endpoint:** `/v1/squads/{squadId}`\n    \n- **Description:** Delete a specific squad by its ID.\n    \n\n#### Delete Student from Squad\n\n- **Method:** DELETE\n    \n- **Endpoint:** `/v1/squads/{squadId}/students/{studentId}`\n    \n- **Description:** Remove a specific student from a specific squad."
		},
		{
			"name": "Instructor",
			"item": [
				{
					"name": "Get all instructors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/instructors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"instructors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/instructors/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"instructors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create instructor",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Johnny\",\r\n    \"lastName\": \"Bravo\",\r\n    \"email\": \"johnny.bravo@example.com\",\r\n    \"classAssigned\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/instructors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"instructors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update instructor",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Johnny\",\r\n    \"lastName\": \"Bravo\",\r\n    \"email\": \"johnny.bravo@example.com\",\r\n    \"classAssigned\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/instructors/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"instructors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete by Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/instructors/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"instructors",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"description": "### Instructor Management Endpoints\n\n#### Get All Instructors\n\n- **Method:** GET\n    \n- **Endpoint:** `/v1/instructors`\n    \n- **Description:** Retrieve a list of all instructors.\n    \n\n#### Get Instructor by ID\n\n- **Method:** GET\n    \n- **Endpoint:** `/v1/instructors/{instructorId}`\n    \n- **Description:** Retrieve details about a specific instructor by their ID.\n    \n\n#### Create Instructor\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/instructors`\n    \n- **Description:** Create a new instructor.\n    \n\n#### Update Instructor\n\n- **Method:** PUT\n    \n- **Endpoint:** `/v1/instructors/{instructorId}`\n    \n- **Description:** Update details of a specific instructor by their ID.\n    \n\n#### Delete Instructor\n\n- **Method:** DELETE\n    \n- **Endpoint:** `/v1/instructors/{instructorId}`\n    \n- **Description:** Delete a specific instructor by their ID."
		},
		{
			"name": "Coordinator",
			"item": [
				{
					"name": "Get all coordinators",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/coordinators",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"coordinators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/coordinators/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"coordinators",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Coordinator",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Travolta\",\r\n    \"email\": \"john.travolta@example.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/coordinators",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"coordinators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Coordinator",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/coordinators/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"coordinators",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete by Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/coordinators/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"coordinators",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"description": "### Coordinator Management Endpoints\n\n#### Get All Coordinators\n\n- **Method:** GET\n    \n- **Endpoint:** `/v1/coordinators`\n    \n- **Description:** Retrieve a list of all coordinators.\n    \n\n#### Get Coordinator by ID\n\n- **Method:** GET\n    \n- **Endpoint:** `/v1/coordinators/{coordinatorId}`\n    \n- **Description:** Retrieve details about a specific coordinator by their ID.\n    \n\n#### Create Coordinator\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/coordinators`\n    \n- **Description:** Create a new coordinator.\n    \n\n#### Update Coordinator\n\n- **Method:** PUT\n    \n- **Endpoint:** `/v1/coordinators/{coordinatorId}`\n    \n- **Description:** Update details of a specific coordinator by their ID.\n    \n\n#### Delete Coordinator\n\n- **Method:** DELETE\n    \n- **Endpoint:** `/v1/coordinators/{coordinatorId}`\n    \n- **Description:** Delete a specific coordinator by their ID."
		},
		{
			"name": "Scrum Master",
			"item": [
				{
					"name": "Get all SMs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/scrum-masters",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"scrum-masters"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/scrum-masters/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"scrum-masters",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new SM",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Barbie\",\r\n    \"lastName\": \"Girl\",\r\n    \"email\": \"barbie.girl@example.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/scrum-masters",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"scrum-masters"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update SM",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Barbie\",\r\n    \"lastName\": \"Girl\",\r\n    \"email\": \"barbie.girl@example.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/scrum-masters/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"scrum-masters",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete SM by Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/scrum-masters/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"scrum-masters",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"description": "### Scrum Master Management Endpoints\n\n#### Get All Scrum Masters\n\n- **Method:** GET\n    \n- **Endpoint:** `/v1/scrum-masters`\n    \n- **Description:** Retrieve a list of all scrum masters.\n    \n\n#### Get Scrum Master by ID\n\n- **Method:** GET\n    \n- **Endpoint:** `/v1/scrum-masters/{scrumMasterId}`\n    \n- **Description:** Retrieve details about a specific scrum master by their ID.\n    \n\n#### Create Scrum Master\n\n- **Method:** POST\n    \n- **Endpoint:** `/v1/scrum-masters`\n    \n- **Description:** Create a new scrum master.\n    \n\n#### Update Scrum Master\n\n- **Method:** PUT\n    \n- **Endpoint:** `/v1/scrum-masters/{scrumMasterId}`\n    \n- **Description:** Update details of a specific scrum master by their ID.\n    \n\n#### Delete Scrum Master\n\n- **Method:** DELETE\n    \n- **Endpoint:** `/v1/scrum-masters/{scrumMasterId}`\n    \n- **Description:** Delete a specific scrum master by their ID."
		}
	]
}